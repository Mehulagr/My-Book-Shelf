{"ast":null,"code":"import _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/books.js\";\nimport React, { Component } from 'react';\nimport emptyCover from '../images/empty.jpg';\nimport ManageShelf from './manageShelf';\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (e) {\n      //e.preventDefault()\n      //const values = serializeForm(e.target, {hash: true})\n      if (_this.props.changingShelf) {\n        _this.props.changingShelf(e.target.value, _this.props.bookDetail);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"render\",\n    value: function render() {\n      var bookDetail = this.props.bookDetail;\n      var bookThumbnail = bookDetail.imageLinks.thumbnail ? bookDetail.imageLinks.thumbnail : emptyCover;\n      var bookTitle = bookDetail.title ? bookDetail.title : 'No title available';\n      var bookAuthors = bookDetail.title ? bookDetail.title : 'Unknown authors';\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-cover\",\n        style: {\n          width: 128,\n          height: 174,\n          backgroundImage: \"url( \".concat(bookThumbnail, \" )\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(ManageShelf, {\n        myLibrary: this.props.myLibrary,\n        bookDetail: bookDetail,\n        changingShelf: this.props.changingShelf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"book-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, bookTitle), React.createElement(\"div\", {\n        className: \"book-authors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, bookAuthors)));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/books.js"],"names":["React","Component","emptyCover","ManageShelf","Books","handleChange","e","props","changingShelf","target","value","bookDetail","bookThumbnail","imageLinks","thumbnail","bookTitle","title","bookAuthors","width","height","backgroundImage","myLibrary"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,K;;;;;;;;;;;;;;;;;;UACFC,Y,GAAe,UAACC,CAAD,EAAO;AAClB;AACA;AACA,UAAI,MAAKC,KAAL,CAAWC,aAAf,EAA8B;AAC1B,cAAKD,KAAL,CAAWC,aAAX,CAAyBF,CAAC,CAACG,MAAF,CAASC,KAAlC,EAAyC,MAAKH,KAAL,CAAWI,UAApD;AACH;AACJ,K;;;;;;;6BAES;AAAA,UACEA,UADF,GACiB,KAAKJ,KADtB,CACEI,UADF;AAGN,UAAMC,aAAa,GAAGD,UAAU,CAACE,UAAX,CAAsBC,SAAtB,GAAkCH,UAAU,CAACE,UAAX,CAAsBC,SAAxD,GAAoEZ,UAA1F;AACA,UAAMa,SAAS,GAAGJ,UAAU,CAACK,KAAX,GAAmBL,UAAU,CAACK,KAA9B,GAAsC,oBAAxD;AACA,UAAMC,WAAW,GAAGN,UAAU,CAACK,KAAX,GAAmBL,UAAU,CAACK,KAA9B,GAAsC,iBAA1D;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,iBAAUR,aAAV;AAA1C,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWc,SAAnC;AAA8C,QAAA,UAAU,EAAEV,UAA1D;AAAsE,QAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWC,aAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BO,SAA7B,CALJ,EAMI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BE,WAA/B,CANJ,CADJ,CADJ;AAYH;;;;EA5BehB,S;;AA+BpB,eAAeG,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport emptyCover from '../images/empty.jpg';\nimport ManageShelf from './manageShelf'\n\nclass Books extends Component {\n    handleChange = (e) => {\n        //e.preventDefault()\n        //const values = serializeForm(e.target, {hash: true})\n        if (this.props.changingShelf) {\n            this.props.changingShelf(e.target.value, this.props.bookDetail);\n        }\n    }\n\n    render () {\n        const { bookDetail } = this.props;\n\n        const bookThumbnail = bookDetail.imageLinks.thumbnail ? bookDetail.imageLinks.thumbnail : emptyCover;\n        const bookTitle = bookDetail.title ? bookDetail.title : 'No title available';\n        const bookAuthors = bookDetail.title ? bookDetail.title : 'Unknown authors';\n\n        return (\n            <li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div className=\"book-cover\" style={{ width: 128, height: 174, backgroundImage: `url( ${bookThumbnail} )` }}></div>\n                        <ManageShelf myLibrary={this.props.myLibrary} bookDetail={bookDetail} changingShelf={this.props.changingShelf}/>\n                    </div>\n                    <div className=\"book-title\">{bookTitle}</div>\n                    <div className=\"book-authors\">{bookAuthors}</div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default Books;"]},"metadata":{},"sourceType":"module"}