{"ast":null,"code":"import _toConsumableArray from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport SearchPage from './components/search';\nimport Shelf from './components/shelf';\nimport { Route } from 'react-router-dom';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      myLibrary: [],\n      showSearchPage: false\n    };\n\n    _this.onChangingShelf = function (newShelf, bookDetails) {\n      //Case 1: Book exists in library and we are changing shelf to something other than none\n      //Case 2: Book exist in library and we are changing shelf to none\n      //Case 3: Book does not exist in library and we are adding\n      var bookInLibrary = _this.state.myLibrary.find(function (findingBook) {\n        return findingBook.id === bookDetails.id;\n      });\n\n      if (bookInLibrary) {\n        if (newShelf === \"none\") {\n          _this.setState(function (currentState) {\n            return {\n              myLibrary: currentState.myLibrary.filter(function (i) {\n                return i.id !== bookDetails.id;\n              })\n            };\n          });\n        } else {\n          _this.setState(function (currentState) {\n            return currentState.myLibrary.find(function (y) {\n              return y.id === bookDetails.id;\n            }).shelf = newShelf;\n          });\n        }\n      } else {\n        bookDetails.shelf = newShelf;\n\n        _this.setState(function (currentState) {\n          return {\n            myLibrary: _toConsumableArray(currentState.myLibrary).concat([bookDetails])\n          };\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (myLibrary) {\n        _this2.setState(function () {\n          return {\n            myLibrary: myLibrary\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.showSearchPage ? React.createElement(SearchPage, {\n        myLibrary: this.state.myLibrary,\n        changingShelf: function changingShelf(newShelf, bookDetails) {\n          return _this3.onChangingShelf(newShelf, bookDetails);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }) : React.createElement(Shelf, {\n        myLibrary: this.state.myLibrary,\n        changingShelf: function changingShelf(newShelf, bookDetails) {\n          return _this3.onChangingShelf(newShelf, bookDetails);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/App.js"],"names":["React","BooksAPI","SearchPage","Shelf","Route","BooksApp","state","myLibrary","showSearchPage","onChangingShelf","newShelf","bookDetails","bookInLibrary","find","findingBook","id","setState","currentState","filter","i","y","shelf","getAll","then","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,cAAc,EAAE;AAFV,K;;UAcRC,e,GAAkB,UAACC,QAAD,EAAWC,WAAX,EAA2B;AAC3C;AACA;AACA;AACA,UAAIC,aAAa,GAAG,MAAKN,KAAL,CAAWC,SAAX,CAAqBM,IAArB,CAA0B,UAACC,WAAD;AAAA,eAAiBA,WAAW,CAACC,EAAZ,KAAmBJ,WAAW,CAACI,EAAhD;AAAA,OAA1B,CAApB;;AAEA,UAAIH,aAAJ,EAAmB;AACjB,YAAIF,QAAQ,KAAK,MAAjB,EAA0B;AACxB,gBAAKM,QAAL,CAAc,UAACC,YAAD;AAAA,mBAAmB;AAC/BV,cAAAA,SAAS,EAAEU,YAAY,CAACV,SAAb,CAAuBW,MAAvB,CAA8B,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACJ,EAAF,KAASJ,WAAW,CAACI,EAAzB;AAAA,eAA/B;AADoB,aAAnB;AAAA,WAAd;AAGD,SAJD,MAIO;AACL,gBAAKC,QAAL,CAAc,UAACC,YAAD;AAAA,mBACZA,YAAY,CAACV,SAAb,CAAuBM,IAAvB,CAA4B,UAACO,CAAD;AAAA,qBAAOA,CAAC,CAACL,EAAF,KAASJ,WAAW,CAACI,EAA5B;AAAA,aAA5B,EAA4DM,KAA5D,GAAoEX,QADxD;AAAA,WAAd;AAGD;AACF,OAVD,MAUO;AACLC,QAAAA,WAAW,CAACU,KAAZ,GAAoBX,QAApB;;AACA,cAAKM,QAAL,CAAc,UAACC,YAAD;AAAA,iBAAmB;AAC/BV,YAAAA,SAAS,qBAAMU,YAAY,CAACV,SAAnB,UAA8BI,WAA9B;AADsB,WAAnB;AAAA,SAAd;AAGD;AACF,K;;;;;;;wCA/BoB;AAAA;;AACnBV,MAAAA,QAAQ,CAACqB,MAAT,GACGC,IADH,CACQ,UAAChB,SAAD,EAAe;AACnB,QAAA,MAAI,CAACS,QAAL,CAAc;AAAA,iBAAO;AACnBT,YAAAA,SAAS,EAATA;AADmB,WAAP;AAAA,SAAd;AAGD,OALH;AAMD;;;6BA0BQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,cAAX,GACC,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,SAAlC;AAA6C,QAAA,aAAa,EAAE,uBAACG,QAAD,EAAWC,WAAX;AAAA,iBAA4B,MAAI,CAACF,eAAL,CAAqBC,QAArB,EAA+BC,WAA/B,CAA5B;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWC,SAA7B;AAAwC,QAAA,aAAa,EAAE,uBAACG,QAAD,EAAWC,WAAX;AAAA,iBAA4B,MAAI,CAACF,eAAL,CAAqBC,QAArB,EAA+BC,WAA/B,CAA5B;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADF;AASD;;;;EAjDoBX,KAAK,CAACwB,S;;AAoD7B,eAAenB,QAAf","sourcesContent":["import React from 'react';\nimport * as BooksAPI from './BooksAPI'\nimport './App.css';\nimport SearchPage from './components/search';\nimport Shelf from './components/shelf';\nimport {Route} from 'react-router-dom';\n\nclass BooksApp extends React.Component {\n  state = {\n    myLibrary: [],\n    showSearchPage: false\n  }\n\n  componentDidMount () {\n    BooksAPI.getAll()\n      .then((myLibrary) => {\n        this.setState(() => ({\n          myLibrary\n        }))\n      })\n  }\n\n  onChangingShelf = (newShelf, bookDetails) => {\n    //Case 1: Book exists in library and we are changing shelf to something other than none\n    //Case 2: Book exist in library and we are changing shelf to none\n    //Case 3: Book does not exist in library and we are adding\n    let bookInLibrary = this.state.myLibrary.find((findingBook) => findingBook.id === bookDetails.id);\n\n    if (bookInLibrary) {\n      if (newShelf === \"none\" ) {\n        this.setState((currentState) => ({\n          myLibrary: currentState.myLibrary.filter(i => i.id !== bookDetails.id)\n        }))\n      } else {\n        this.setState((currentState) => (\n          currentState.myLibrary.find((y) => y.id === bookDetails.id).shelf = newShelf\n        ))\n      }\n    } else {\n      bookDetails.shelf = newShelf;\n      this.setState((currentState) => ({\n        myLibrary: [...currentState.myLibrary, bookDetails]\n      }))\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <SearchPage myLibrary={this.state.myLibrary} changingShelf={(newShelf, bookDetails) => (this.onChangingShelf(newShelf, bookDetails))}/>\n        ) : (\n          <Shelf myLibrary={this.state.myLibrary} changingShelf={(newShelf, bookDetails) => (this.onChangingShelf(newShelf, bookDetails))}/>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}