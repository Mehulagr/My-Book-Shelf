{"ast":null,"code":"import _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/search.js\";\nimport React, { Component } from 'react';\nimport Books from './books';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: \"\"\n    };\n\n    _this.handleSearch = function () {};\n\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, searchResultList.map(function (thisBook) {\n        return React.createElement(Books, {\n          bookDetail: thisBook,\n          changingShelf: _this2.props.changingShelf,\n          key: thisBook.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default SearchPage;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/search.js"],"names":["React","Component","Books","SearchPage","state","query","handleSearch","setState","showSearchPage","searchResultList","map","thisBook","props","changingShelf","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAO;AACHC,MAAAA,KAAK,EAAE;AADJ,K;;UAIPC,Y,GAAe,YAAM,CAEpB,C;;;;;;;6BAES;AAAA;;AACN,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,CAAc;AAAEC,YAAAA,cAAc,EAAE;AAAlB,WAAd,CAAN;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,2BAA/B;AAA2D,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAA7E;AAAoF,QAAA,QAAQ,EAAE,KAAKC,YAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAFA,CADJ,EAgBI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,gBAAgB,CAACC,GAAjB,CAAqB,UAACC,QAAD;AAAA,eAAc,oBAAC,KAAD;AAAO,UAAA,UAAU,EAAEA,QAAnB;AAA6B,UAAA,aAAa,EAAE,MAAI,CAACC,KAAL,CAAWC,aAAvD;AAAsE,UAAA,GAAG,EAAEF,QAAQ,CAACG,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA,OAArB,CADL,CADA,CAhBJ,CADJ;AAwBH;;;;EAlCoBb,S;;AAqCzB,eAAeE,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport Books from './books';\n\nclass SearchPage extends Component {\n    state= {\n        query: \"\"\n    }\n\n    handleSearch = () => {\n        \n    }\n\n    render () {\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n                <div className=\"search-books-input-wrapper\">\n                    {/*\n                    NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                    You can find these search terms here:\n                    https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                    However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                    you don't find a specific author or title. Every search is limited by search terms.\n                    */}\n                    <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query} onChange={this.handleSearch}/>\n\n                </div>\n                </div>\n                <div className=\"search-books-results\">\n                <ol className=\"books-grid\">\n                    {searchResultList.map((thisBook) => <Books bookDetail={thisBook} changingShelf={this.props.changingShelf} key={thisBook.id}/> )}\n                </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}