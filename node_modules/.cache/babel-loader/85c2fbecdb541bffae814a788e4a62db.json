{"ast":null,"code":"import _toConsumableArray from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport SearchPage from './components/search';\nimport Shelf from './components/shelf';\nimport { Route } from 'react-router-dom';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      myLibrary: []\n    };\n\n    _this.onChangingShelf = function (newShelf, bookDetails) {\n      //Case 1: Book exists in library and we are changing shelf to something other than none\n      //Case 2: Book exist in library and we are changing shelf to none\n      //Case 3: Book does not exist in library and we are adding\n      var bookInLibrary = _this.state.myLibrary.find(function (findingBook) {\n        return findingBook.id === bookDetails.id;\n      });\n\n      BooksAPI.update(bookDetails, newShelfnewShelf).then(function (updatedBookResult) {\n        console.log(updatedBookResult);\n      });\n\n      if (bookInLibrary) {\n        if (newShelf === \"none\") {\n          _this.setState(function (currentState) {\n            return {\n              myLibrary: currentState.myLibrary.filter(function (i) {\n                return i.id !== bookDetails.id;\n              })\n            };\n          });\n        } else {\n          _this.setState(function (currentState) {\n            return currentState.myLibrary.find(function (y) {\n              return y.id === bookDetails.id;\n            }).shelf = newShelf;\n          });\n        }\n      } else {\n        bookDetails.shelf = newShelf;\n\n        _this.setState(function (currentState) {\n          return {\n            myLibrary: _toConsumableArray(currentState.myLibrary).concat([bookDetails])\n          };\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (myLibrary) {\n        _this2.setState(function () {\n          return {\n            myLibrary: myLibrary\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(Shelf, {\n            myLibrary: _this3.state.myLibrary,\n            changingShelf: function changingShelf(newShelf, bookDetails) {\n              return _this3.onChangingShelf(newShelf, bookDetails);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(SearchPage, {\n            myLibrary: _this3.state.myLibrary,\n            changingShelf: function changingShelf(newShelf, bookDetails) {\n              return _this3.onChangingShelf(newShelf, bookDetails);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/App.js"],"names":["React","BooksAPI","SearchPage","Shelf","Route","BooksApp","state","myLibrary","onChangingShelf","newShelf","bookDetails","bookInLibrary","find","findingBook","id","update","newShelfnewShelf","then","updatedBookResult","console","log","setState","currentState","filter","i","y","shelf","getAll","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as BooksAPI from './BooksAPI'\nimport './App.css';\nimport SearchPage from './components/search';\nimport Shelf from './components/shelf';\nimport {Route} from 'react-router-dom';\n\nclass BooksApp extends React.Component {\n  state = {\n    myLibrary: []\n  }\n\n  componentDidMount () {\n    BooksAPI.getAll()\n      .then((myLibrary) => {\n        this.setState(() => ({\n          myLibrary\n        }))\n      })\n  }\n\n  onChangingShelf = (newShelf, bookDetails) => {\n    //Case 1: Book exists in library and we are changing shelf to something other than none\n    //Case 2: Book exist in library and we are changing shelf to none\n    //Case 3: Book does not exist in library and we are adding\n    let bookInLibrary = this.state.myLibrary.find((findingBook) => findingBook.id === bookDetails.id);\n    BooksAPI.update(bookDetails, newShelfnewShelf)\n      .then((updatedBookResult) => {\n        console.log(updatedBookResult)\n      })\n\n    if (bookInLibrary) {\n      if (newShelf === \"none\" ) {\n        this.setState((currentState) => ({\n          myLibrary: currentState.myLibrary.filter(i => i.id !== bookDetails.id)\n        }))\n      } else {\n        this.setState((currentState) => (\n          currentState.myLibrary.find((y) => y.id === bookDetails.id).shelf = newShelf\n        ))\n      }\n    } else {\n      bookDetails.shelf = newShelf;\n      this.setState((currentState) => ({\n        myLibrary: [...currentState.myLibrary, bookDetails]\n      }))\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path='/' render={() => (\n          <Shelf \n            myLibrary={this.state.myLibrary} \n            changingShelf={(newShelf, bookDetails) => (this.onChangingShelf(newShelf, bookDetails))}\n          />\n        )} />\n\n        <Route path='/search' render={() => (\n          <SearchPage \n            myLibrary={this.state.myLibrary} \n            changingShelf={(newShelf, bookDetails) => (this.onChangingShelf(newShelf, bookDetails))}\n          />\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}