{"ast":null,"code":"import _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/shelf.js\";\nimport React, { Component } from 'react';\nimport Books from './books';\nvar shelfTypes = [{\n  type: 'currentlyReading',\n  title: 'Currently Reading'\n}, {\n  type: 'wantToRead',\n  title: 'Want to Read'\n}, {\n  type: 'read',\n  title: 'Read'\n}];\n\nvar Shelf =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Shelf, _Component);\n\n  function Shelf() {\n    _classCallCheck(this, Shelf);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Shelf).apply(this, arguments));\n  }\n\n  _createClass(Shelf, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      //const {  } = this.state;\n      var myLibrary = this.props.myLibrary; //console.log(myLibrary);\n\n      return React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"shelfTypes.map((shelf) => (\", React.createElement(\"div\", {\n        className: \"bookshelf\",\n        key: shelf.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, shelf.title), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, myLibrary.filter(function (booksOnShelf) {\n        return booksOnShelf.shelf === shelf.type;\n      }).map(function (thisBook) {\n        return React.createElement(Books, {\n          bookDetail: thisBook,\n          changingShelf: _this.props.changingShelf,\n          key: thisBook.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      })))), \"))\"), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Add a book\")));\n    }\n  }]);\n\n  return Shelf;\n}(Component);\n\nexport default Shelf;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/shelf.js"],"names":["React","Component","Books","shelfTypes","type","title","Shelf","myLibrary","props","shelf","filter","booksOnShelf","map","thisBook","changingShelf","id","setState","showSearchPage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,IAAI,EAAE,kBAAR;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CADiB,EAEjB;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAFiB,EAGjB;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAHiB,CAAnB;;IAMMC,K;;;;;;;;;;;;;6BACQ;AAAA;;AACN;AADM,UAEEC,SAFF,GAEgB,KAAKC,KAFrB,CAEED,SAFF,EAIN;;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEE,KAAK,CAACL,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCK,KAAK,CAACJ,KAAvC,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,SAAS,CAACG,MAAV,CAAiB,UAAAC,YAAY;AAAA,eAAIA,YAAY,CAACF,KAAb,KAAuBA,KAAK,CAACL,IAAjC;AAAA,OAA7B,EAAoEQ,GAApE,CAAwE,UAACC,QAAD;AAAA,eAAc,oBAAC,KAAD;AAAO,UAAA,UAAU,EAAEA,QAAnB;AAA6B,UAAA,aAAa,EAAE,KAAI,CAACL,KAAL,CAAWM,aAAvD;AAAsE,UAAA,GAAG,EAAED,QAAQ,CAACE,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA,OAAxE,CADH,CADF,CAFF,CAFJ,OAJF,EAgBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,QAAL,CAAc;AAAEC,YAAAA,cAAc,EAAE;AAAlB,WAAd,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAhBF,CADF;AAsBH;;;;EA7BehB,S;;AAgCpB,eAAeK,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport Books from './books';\n\nconst shelfTypes = [\n  { type: 'currentlyReading', title: 'Currently Reading' },\n  { type: 'wantToRead', title: 'Want to Read' },\n  { type: 'read', title: 'Read' }\n];\n\nclass Shelf extends Component {\n    render () {\n        //const {  } = this.state;\n        const { myLibrary } = this.props;\n\n        //console.log(myLibrary);\n\n        return (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              shelfTypes.map((shelf) => (\n                <div className=\"bookshelf\" key={shelf.type}>\n                  <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                      {myLibrary.filter(booksOnShelf => booksOnShelf.shelf === shelf.type).map((thisBook) => <Books bookDetail={thisBook} changingShelf={this.props.changingShelf} key={thisBook.id}/> )}\n                    </ol>\n                  </div>\n                </div>\n              ))\n            </div>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Shelf;"]},"metadata":{},"sourceType":"module"}