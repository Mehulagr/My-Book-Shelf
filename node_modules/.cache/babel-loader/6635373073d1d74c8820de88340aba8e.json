{"ast":null,"code":"import _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/manageShelf.js\";\nimport React, { Component } from 'react';\n\nvar ManageShelf =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ManageShelf, _Component);\n\n  function ManageShelf() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ManageShelf);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ManageShelf)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (e) {\n      if (_this.props.changingShelf) {\n        _this.props.changingShelf(e.target.value, _this.props.bookDetail);\n      }\n    };\n\n    _this.bookShelf = function () {\n      if (_this.props.bookDetail.shelf) {\n        return _this.props.bookDetail.shelf;\n      } else if (_this.props.myLibrary && _this.props.myLibrary.find(function (selectedBook) {\n        return selectedBook.id === _this.props.bookDetail.id;\n      })) {\n        return _this.props.myLibrary.find(function (selectedBook) {\n          return selectedBook.id === _this.props.bookDetail.id;\n        }).shelf;\n      } else {\n        return \"none\";\n      }\n\n      console.log(\"hello\");\n    };\n\n    return _this;\n  }\n\n  _createClass(ManageShelf, [{\n    key: \"render\",\n    value: function render() {\n      //const { bookDetail } = this.props;\n      return React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.bookShelf(),\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"None\")));\n    }\n  }]);\n\n  return ManageShelf;\n}(Component);\n\nexport default ManageShelf;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/manageShelf.js"],"names":["React","Component","ManageShelf","handleChange","e","props","changingShelf","target","value","bookDetail","bookShelf","shelf","myLibrary","find","selectedBook","id","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,W;;;;;;;;;;;;;;;;;;UACFC,Y,GAAe,UAACC,CAAD,EAAO;AAClB,UAAI,MAAKC,KAAL,CAAWC,aAAf,EAA8B;AAC1B,cAAKD,KAAL,CAAWC,aAAX,CAAyBF,CAAC,CAACG,MAAF,CAASC,KAAlC,EAAyC,MAAKH,KAAL,CAAWI,UAApD;AACH;AACJ,K;;UAEDC,S,GAAY,YAAM;AACd,UAAI,MAAKL,KAAL,CAAWI,UAAX,CAAsBE,KAA1B,EAAiC;AAC7B,eAAO,MAAKN,KAAL,CAAWI,UAAX,CAAsBE,KAA7B;AACH,OAFD,MAEO,IAAI,MAAKN,KAAL,CAAWO,SAAX,IAAwB,MAAKP,KAAL,CAAWO,SAAX,CAAqBC,IAArB,CAA0B,UAACC,YAAD;AAAA,eAAkBA,YAAY,CAACC,EAAb,KAAoB,MAAKV,KAAL,CAAWI,UAAX,CAAsBM,EAA5D;AAAA,OAA1B,CAA5B,EAAuH;AAC1H,eAAO,MAAKV,KAAL,CAAWO,SAAX,CAAqBC,IAArB,CAA0B,UAACC,YAAD;AAAA,iBAAkBA,YAAY,CAACC,EAAb,KAAoB,MAAKV,KAAL,CAAWI,UAAX,CAAsBM,EAA5D;AAAA,SAA1B,EAA0FJ,KAAjG;AACH,OAFM,MAEA;AACH,eAAO,MAAP;AACH;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,K;;;;;;;6BAES;AACN;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAE,KAAKP,SAAL,EAAf;AAAiC,QAAA,QAAQ,EAAE,KAAKP,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ;AAWH;;;;EAhCqBF,S;;AAmC1B,eAAeC,WAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass ManageShelf extends Component {\n    handleChange = (e) => {\n        if (this.props.changingShelf) {\n            this.props.changingShelf(e.target.value, this.props.bookDetail);\n        }\n    }\n\n    bookShelf = () => {\n        if (this.props.bookDetail.shelf) {\n            return this.props.bookDetail.shelf\n        } else if (this.props.myLibrary && this.props.myLibrary.find((selectedBook) => selectedBook.id === this.props.bookDetail.id)) {\n            return this.props.myLibrary.find((selectedBook) => selectedBook.id === this.props.bookDetail.id).shelf\n        } else {\n            return \"none\"\n        }\n        console.log(\"hello\")\n    }\n\n    render () {\n        //const { bookDetail } = this.props;\n\n        return (\n            <div className=\"book-shelf-changer\">\n                <select value={this.bookShelf()} onChange={this.handleChange}>\n                    <option value=\"move\" disabled>Move to...</option>\n                    <option value=\"currentlyReading\">Currently Reading</option>\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">None</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default ManageShelf;"]},"metadata":{},"sourceType":"module"}