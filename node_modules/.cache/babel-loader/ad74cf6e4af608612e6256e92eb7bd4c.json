{"ast":null,"code":"import _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/search.js\";\nimport React, { Component } from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport Books from './books';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: \"\",\n      searchResultList: []\n    };\n\n    _this.handleSearch = function (query) {\n      _this.setState(function () {\n        return {\n          query: query\n        };\n      });\n\n      BooksAPI.search(query).then(function (searchResultList) {\n        if (searchResultList && searchResultList.error !== \"empty query\") {\n          _this.setState(function () {\n            return {\n              searchResultList: searchResultList\n            };\n          });\n\n          assignShelf(searchResultList);\n        }\n      });\n    };\n\n    _this.assignShelf = function () {\n      if (bookDetail.shelf) {\n        return bookDetail.shelf;\n      } else {\n        var uthaoBook = _this.props.myLibrary.find(function (selectedBook) {\n          return selectedBook.id === bookDetail.id;\n        });\n\n        if (uthaoBook) {\n          bookDetail.shelf = uthaoBook.shelf;\n        } else {\n          bookDetail.shelf = \"none\";\n        } //console.log(bookDetail.shelf);\n\n\n        return bookDetail.shelf;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: function onChange(event) {\n          return _this2.handleSearch(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.searchResultList.map(function (thisBook) {\n        return React.createElement(Books, {\n          myLibrary: _this2.props.myLibrary,\n          bookDetail: thisBook,\n          changingShelf: _this2.props.changingShelf,\n          key: thisBook.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default SearchPage;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/search.js"],"names":["React","Component","BooksAPI","Books","SearchPage","state","query","searchResultList","handleSearch","setState","search","then","error","assignShelf","bookDetail","shelf","uthaoBook","props","myLibrary","find","selectedBook","id","showSearchPage","event","target","value","map","thisBook","changingShelf"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as BooksAPI from '../BooksAPI'\nimport Books from './books';\n\nclass SearchPage extends Component {\n    state= {\n        query: \"\",\n        searchResultList: []\n    }\n\n    handleSearch = (query) => {\n        this.setState(() => ({\n            query: query\n        }));\n        \n        BooksAPI.search(query)\n            .then((searchResultList) => {\n                if (searchResultList && searchResultList.error !== \"empty query\") {\n                    this.setState(() => ({\n                        searchResultList\n                    }));\n                    assignShelf(searchResultList);\n                }\n            })\n    }\n\n    assignShelf = () => {\n        if (bookDetail.shelf) {\n            return bookDetail.shelf\n        } else {\n            let uthaoBook = this.props.myLibrary.find((selectedBook) => (selectedBook.id === bookDetail.id));\n            if (uthaoBook) {\n                bookDetail.shelf = uthaoBook.shelf;\n            } else {\n                bookDetail.shelf = \"none\";\n            }\n            //console.log(bookDetail.shelf);\n            return bookDetail.shelf\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n                    <div className=\"search-books-input-wrapper\">\n                        {/*\n                        NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                        You can find these search terms here:\n                        https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                        However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                        you don't find a specific author or title. Every search is limited by search terms.\n                        */}\n                        <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query} onChange={(event) => this.handleSearch(event.target.value)}/>\n\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {this.state.searchResultList.map((thisBook) => <Books myLibrary={this.props.myLibrary} bookDetail={thisBook} changingShelf={this.props.changingShelf} key={thisBook.id}/> )}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}