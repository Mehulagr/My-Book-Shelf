{"ast":null,"code":"import _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/search.js\";\nimport React, { Component } from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport { Link } from 'react-router-dom';\nimport Books from './books';\nimport PropTypes from 'prop-types';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: \"\",\n      searchResultList: []\n    };\n\n    _this.handleSearch = function (query) {\n      _this.setState(function () {\n        return {\n          query: query\n        };\n      });\n\n      if (query === \"\") {\n        _this.setState(function () {\n          return {\n            searchResultList: []\n          };\n        });\n      } else {\n        BooksAPI.search(query).then(function (searchResultList) {\n          if (searchResultList && searchResultList.error !== \"empty query\") {\n            _this.setState(function () {\n              return {\n                searchResultList: searchResultList\n              };\n            });\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          searchResultList = _this$state.searchResultList,\n          query = _this$state.query;\n      var _this$props = this.props,\n          myLibrary = _this$props.myLibrary,\n          changingShelf = _this$props.changingShelf;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.handleSearch(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, searchResultList.map(function (thisBook) {\n        return React.createElement(Books, {\n          myLibrary: myLibrary,\n          bookDetail: thisBook,\n          changingShelf: changingShelf,\n          key: thisBook.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nSearchPage.propTypes = {\n  myLibrary: PropTypes.array.isRequired,\n  changingShelf: PropTypes.func.isRequired\n};\nexport default SearchPage;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/components/search.js"],"names":["React","Component","BooksAPI","Link","Books","PropTypes","SearchPage","state","query","searchResultList","handleSearch","setState","search","then","error","props","myLibrary","changingShelf","event","target","value","map","thisBook","id","propTypes","array","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAO;AACHC,MAAAA,KAAK,EAAE,EADJ;AAEHC,MAAAA,gBAAgB,EAAE;AAFf,K;;UAUPC,Y,GAAe,UAACF,KAAD,EAAW;AACtB,YAAKG,QAAL,CAAc;AAAA,eAAO;AACjBH,UAAAA,KAAK,EAAEA;AADU,SAAP;AAAA,OAAd;;AAIA,UAAIA,KAAK,KAAK,EAAd,EAAkB;AACd,cAAKG,QAAL,CAAc;AAAA,iBAAO;AACjBF,YAAAA,gBAAgB,EAAE;AADD,WAAP;AAAA,SAAd;AAGH,OAJD,MAIO;AACHP,QAAAA,QAAQ,CAACU,MAAT,CAAgBJ,KAAhB,EACKK,IADL,CACU,UAACJ,gBAAD,EAAsB;AACxB,cAAIA,gBAAgB,IAAIA,gBAAgB,CAACK,KAAjB,KAA2B,aAAnD,EAAkE;AAC9D,kBAAKH,QAAL,CAAc;AAAA,qBAAO;AACjBF,gBAAAA,gBAAgB,EAAhBA;AADiB,eAAP;AAAA,aAAd;AAGH;AACJ,SAPL;AAQH;AACJ,K;;;;;;;6BAES;AAAA;;AAAA,wBAC8B,KAAKF,KADnC;AAAA,UACEE,gBADF,eACEA,gBADF;AAAA,UACoBD,KADpB,eACoBA,KADpB;AAAA,wBAE+B,KAAKO,KAFpC;AAAA,UAEEC,SAFF,eAEEA,SAFF;AAAA,UAEaC,aAFb,eAEaA,aAFb;AAIN,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,2BAA/B;AAA2D,QAAA,KAAK,EAAET,KAAlE;AAAyE,QAAA,QAAQ,EAAE,kBAACU,KAAD;AAAA,iBAAW,MAAI,CAACR,YAAL,CAAkBQ,KAAK,CAACC,MAAN,CAAaC,KAA/B,CAAX;AAAA,SAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADJ,EAOI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,gBAAgB,CAACY,GAAjB,CAAqB,UAACC,QAAD;AAAA,eAAc,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEN,SAAlB;AAA6B,UAAA,UAAU,EAAEM,QAAzC;AAAmD,UAAA,aAAa,EAAEL,aAAlE;AAAiF,UAAA,GAAG,EAAEK,QAAQ,CAACC,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA,OAArB,CADL,CADJ,CAPJ,CADJ;AAeH;;;;EAnDoBtB,S;;AAAnBK,U,CAMKkB,S,GAAY;AACfR,EAAAA,SAAS,EAAEX,SAAS,CAACoB,KAAV,CAAgBC,UADZ;AAEfT,EAAAA,aAAa,EAAEZ,SAAS,CAACsB,IAAV,CAAeD;AAFf,C;AAgDvB,eAAepB,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport {Link} from 'react-router-dom';\nimport Books from './books';\nimport PropTypes from 'prop-types';\n\nclass SearchPage extends Component {\n    state= {\n        query: \"\",\n        searchResultList: []\n    }\n\n    static propTypes = {\n        myLibrary: PropTypes.array.isRequired,\n        changingShelf: PropTypes.func.isRequired,\n    }\n\n    handleSearch = (query) => {\n        this.setState(() => ({\n            query: query\n        }));\n        \n        if (query === \"\") {\n            this.setState(() => ({\n                searchResultList: []\n            }));\n        } else {\n            BooksAPI.search(query)\n                .then((searchResultList) => {\n                    if (searchResultList && searchResultList.error !== \"empty query\") {\n                        this.setState(() => ({\n                            searchResultList\n                        }));\n                    }\n                })\n        }\n    }\n\n    render () {\n        const { searchResultList, query } = this.state;\n        const { myLibrary, changingShelf } = this.props;\n\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to='/'>Close</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input type=\"text\" placeholder=\"Search by title or author\" value={query} onChange={(event) => this.handleSearch(event.target.value)}/>\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {searchResultList.map((thisBook) => <Books myLibrary={myLibrary} bookDetail={thisBook} changingShelf={changingShelf} key={thisBook.id}/> )}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}