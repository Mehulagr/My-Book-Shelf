{"ast":null,"code":"import _classCallCheck from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport SearchPage from './components/search';\nimport Shelf from './components/shelf';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      myLibrary: [],\n\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false\n    };\n\n    _this.onChangingShelf = function (newShelf, bookDetails) {\n      _this.setState(function (currentState) {\n        return _this.state.myLibrary.find(function (y) {\n          return y === bookDetails;\n        }).shelf = newShelf;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (myLibrary) {\n        _this2.setState(function () {\n          return {\n            myLibrary: myLibrary\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.showSearchPage ? React.createElement(SearchPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Shelf, {\n        myLibrary: this.state.myLibrary,\n        changingShelf: function changingShelf(newShelf, bookDetails) {\n          return _this3.onChangingShelf(newShelf, bookDetails);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/magrawal2/Desktop/Github/reboot/myBookshelf/src/App.js"],"names":["React","BooksAPI","SearchPage","Shelf","BooksApp","state","myLibrary","showSearchPage","onChangingShelf","newShelf","bookDetails","setState","currentState","find","y","shelf","getAll","then","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,EADL;;AAEN;;;;;;AAMAC,MAAAA,cAAc,EAAE;AARV,K;;UAoBRC,e,GAAkB,UAACC,QAAD,EAAWC,WAAX,EAA2B;AAC3C,YAAKC,QAAL,CAAc,UAACC,YAAD;AAAA,eACZ,MAAKP,KAAL,CAAWC,SAAX,CAAqBO,IAArB,CAA0B,UAACC,CAAD;AAAA,iBAAOA,CAAC,KAAKJ,WAAb;AAAA,SAA1B,EAAoDK,KAApD,GAA4DN,QADhD;AAAA,OAAd;AAGD,K;;;;;;;wCAboB;AAAA;;AACnBR,MAAAA,QAAQ,CAACe,MAAT,GACGC,IADH,CACQ,UAACX,SAAD,EAAe;AACnB,QAAA,MAAI,CAACK,QAAL,CAAc;AAAA,iBAAO;AACnBL,YAAAA,SAAS,EAATA;AADmB,WAAP;AAAA,SAAd;AAGD,OALH;AAMD;;;6BAQQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,cAAX,GACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,SAA7B;AAAwC,QAAA,aAAa,EAAE,uBAACG,QAAD,EAAWC,WAAX;AAAA,iBAA4B,MAAI,CAACF,eAAL,CAAqBC,QAArB,EAA+BC,WAA/B,CAA5B;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAJF,EASE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,CAAc;AAAEJ,YAAAA,cAAc,EAAE;AAAlB,WAAd,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CATF,CAJJ,CADF;AAqBD;;;;EAjDoBP,KAAK,CAACkB,S;;AAoD7B,eAAed,QAAf","sourcesContent":["import React from 'react';\nimport * as BooksAPI from './BooksAPI'\nimport './App.css';\nimport SearchPage from './components/search';\nimport Shelf from './components/shelf';\n\nclass BooksApp extends React.Component {\n  state = {\n    myLibrary: [],\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false\n  }\n\n  componentDidMount () {\n    BooksAPI.getAll()\n      .then((myLibrary) => {\n        this.setState(() => ({\n          myLibrary\n        }))\n      })\n  }\n\n  onChangingShelf = (newShelf, bookDetails) => {\n    this.setState((currentState) => (\n      this.state.myLibrary.find((y) => y === bookDetails).shelf = newShelf\n    ))\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <SearchPage/>\n        ) : (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <Shelf myLibrary={this.state.myLibrary} changingShelf={(newShelf, bookDetails) => (this.onChangingShelf(newShelf, bookDetails))}/>\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}